/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
	lwcontrollerv1alpha1 "k8s.io/sample-controller/pkg/apis/lwcontroller/v1alpha1"
)

// LwLister helps list Lws.
// All objects returned here must be treated as read-only.
type LwLister interface {
	// List lists all Lws in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*lwcontrollerv1alpha1.Lw, err error)
	// Lws returns an object that can list and get Lws.
	Lws(namespace string) LwNamespaceLister
	LwListerExpansion
}

// lwLister implements the LwLister interface.
type lwLister struct {
	listers.ResourceIndexer[*lwcontrollerv1alpha1.Lw]
}

// NewLwLister returns a new LwLister.
func NewLwLister(indexer cache.Indexer) LwLister {
	return &lwLister{listers.New[*lwcontrollerv1alpha1.Lw](indexer, lwcontrollerv1alpha1.Resource("lw"))}
}

// Lws returns an object that can list and get Lws.
func (s *lwLister) Lws(namespace string) LwNamespaceLister {
	return lwNamespaceLister{listers.NewNamespaced[*lwcontrollerv1alpha1.Lw](s.ResourceIndexer, namespace)}
}

// LwNamespaceLister helps list and get Lws.
// All objects returned here must be treated as read-only.
type LwNamespaceLister interface {
	// List lists all Lws in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*lwcontrollerv1alpha1.Lw, err error)
	// Get retrieves the Lw from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*lwcontrollerv1alpha1.Lw, error)
	LwNamespaceListerExpansion
}

// lwNamespaceLister implements the LwNamespaceLister
// interface.
type lwNamespaceLister struct {
	listers.ResourceIndexer[*lwcontrollerv1alpha1.Lw]
}
